# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        #public: true

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
    
    #event oauth password login
    App\EventListener\UserResolveListener:
        arguments:
            - '@security.user.provider.concrete.app_user_provider'
            - '@security.password_encoder'
        tags:
            - { name: kernel.event_listener, event: trikoder.oauth2.user_resolve, method: onUserResolve }
    
    #event logout
    App\Controller\TestlogoutController:
        arguments:
            - '@security.event_dispatcher.main'
        tags:
            - { name: kernel.event_listener, event: 'Symfony\Component\Security\Http\Event\LogoutEvent', method: onUserResolve }
    
    #Api platfor Collection,Item data query filter
    App\Controller\ApiPlatformUser:
        tags:
            - { name: api_platform.doctrine.orm.query_extension.collection }
            - { name: api_platform.doctrine.orm.query_extension.item }
    
    
    #Api Platform write data query filter
    #App\Controller\ApiPlatformPersistersController: ~
    
    #Api platform Collection data
    #App\DataProvider\ApiPlatformCollectionProvider:
    #    #class: App\DataProvider\ApiPlatformCollectionProvider # fix here
    #    arguments:
    #        $collectionExtensions: !tagged api_platform.doctrine.orm.query_extension.collection
    #    #public: true
    #
    ##Api platform Item data
    #App\DataProvider\ApiPlatformItemProvider:
    #    arguments:
    #        $itemExtensions: !tagged api_platform.doctrine.orm.query_extension.item



    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
